<!doctype html>
<html lang="en"><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"><meta><title>关于VUE项目基本结构 - until-you-possible</title><link rel="manifest" href="/blog/manifest.json"><meta name="application-name" content="until-you-possible"><meta name="msapplication-TileImage" content="/img/favicon.svg"><meta name="apple-mobile-web-app-capable" content="yes"><meta name="apple-mobile-web-app-title" content="until-you-possible"><meta name="apple-mobile-web-app-status-bar-style" content="default"><meta name="description" content="前言：框架vue2.x，构建工具webpack4.x,  node.js 8.11x,  系统window，ES6,  Axios1：vue项目目录文件结构 备注：在初始化项目后src目录下components只用来存放项目公共组件，不用来存放页面其他组件 2：基于初始化得项目结构，添加开发所需要得必要文件，所有业务代码统一放在src目录下，对于项目层级的划分可以：  抽离所有的api接口统一管理"><meta property="og:type" content="blog"><meta property="og:title" content="until-you-possible"><meta property="og:url" content="https://until-you-possible.github.io/blog/2021"><meta property="og:site_name" content="until-you-possible"><meta property="og:description" content="前言：框架vue2.x，构建工具webpack4.x,  node.js 8.11x,  系统window，ES6,  Axios1：vue项目目录文件结构 备注：在初始化项目后src目录下components只用来存放项目公共组件，不用来存放页面其他组件 2：基于初始化得项目结构，添加开发所需要得必要文件，所有业务代码统一放在src目录下，对于项目层级的划分可以：  抽离所有的api接口统一管理"><meta property="og:locale" content="en_US"><meta property="og:image" content="https://until-you-possible.github.io/blog/img/rc.png"><meta property="article:published_time" content="2021-07-12T15:53:07.922Z"><meta property="article:modified_time" content="2021-07-24T10:17:43.291Z"><meta property="article:author" content="arthur"><meta property="twitter:card" content="summary"><meta property="twitter:image" content="/blog/img/rc.png"><script type="application/ld+json">{"@context":"https://schema.org","@type":"BlogPosting","mainEntityOfPage":{"@type":"WebPage","@id":"https://until-you-possible.github.io/blog/2021"},"headline":"关于VUE项目基本结构","image":["https://until-you-possible.github.io/blog/img/rc.png"],"datePublished":"2021-07-12T15:53:07.922Z","dateModified":"2021-07-24T10:17:43.291Z","author":{"@type":"Person","name":"arthur"},"publisher":{"@type":"Organization","name":"until-you-possible","logo":{"@type":"ImageObject","url":"https://until-you-possible.github.io/img/logo.svg"}},"description":"前言：框架vue2.x，构建工具webpack4.x,  node.js 8.11x,  系统window，ES6,  Axios1：vue项目目录文件结构 备注：在初始化项目后src目录下components只用来存放项目公共组件，不用来存放页面其他组件 2：基于初始化得项目结构，添加开发所需要得必要文件，所有业务代码统一放在src目录下，对于项目层级的划分可以：  抽离所有的api接口统一管理"}</script><link rel="canonical" href="https://until-you-possible.github.io/blog/2021"><link rel="icon" href="/blog/img/favicon.svg"><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.2/css/all.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/highlight.js@9.12.0/styles/atom-one-light.css"><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;600&amp;family=Source+Code+Pro"><link rel="stylesheet" href="/blog/css/default.css"><style>body>.footer,body>.navbar,body>.section{opacity:0}</style><!--!--><!--!--><!--!--><script src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js" defer></script><!--!--><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cookieconsent@3.1.1/build/cookieconsent.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/lightgallery@1.6.8/dist/css/lightgallery.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/justifiedGallery@3.7.0/dist/css/justifiedGallery.min.css"><!--!--><!--!--><!--!--><script src="https://cdn.jsdelivr.net/npm/pace-js@1.0.2/pace.min.js"></script><!--!--><!--!--><meta name="generator" content="Hexo 5.4.0"></head><body class="is-2-column"><nav class="navbar navbar-main"><div class="container"><div class="navbar-brand justify-content-center"><a class="navbar-item navbar-logo" href="/blog/"><img src="/blog/img/logo.svg" alt="until-you-possible" height="28"></a></div><div class="navbar-menu"><div class="navbar-start"><a class="navbar-item" href="/blog/">Home</a><a class="navbar-item" href="/blog/archives">Archives</a><a class="navbar-item" href="/blog/categories">Categories</a><a class="navbar-item" href="/blog/tags">Tags</a><a class="navbar-item" href="/blog/about">About</a></div><div class="navbar-end"><a class="navbar-item" target="_blank" rel="noopener" title="Download on GitHub" href="https://github.com/ppoffice/hexo-theme-icarus"><i class="fab fa-github"></i></a><a class="navbar-item is-hidden-tablet catalogue" title="Catalogue" href="javascript:;"><i class="fas fa-list-ul"></i></a><a class="navbar-item search" title="Search" href="javascript:;"><i class="fas fa-search"></i></a></div></div></div></nav><section class="section"><div class="container"><div class="columns"><div class="column order-2 column-main is-8-tablet is-8-desktop is-8-widescreen"><div class="card"><div class="card-image"><span class="image is-7by3"><img class="fill" src="/blog/img/rc.png" alt="关于VUE项目基本结构"></span></div><article class="card-content article" role="article"><div class="article-meta is-size-7 is-uppercase level is-mobile"><div class="level-left"><span class="level-item">Posted&nbsp;<time dateTime="2021-07-12T15:53:07.922Z" title="7/12/2021, 11:53:07 PM">2021-07-12</time></span><span class="level-item">Updated&nbsp;<time dateTime="2021-07-24T10:17:43.291Z" title="7/24/2021, 6:17:43 PM">2021-07-24</time></span><span class="level-item">19 minutes read (About 2844 words)</span><span class="level-item" id="busuanzi_container_page_pv"><span id="busuanzi_value_page_pv">0</span>&nbsp;visits</span></div></div><h1 class="title is-3 is-size-4-mobile">关于VUE项目基本结构</h1><div class="content"><p>前言：框架vue2.x，构建工具webpack4.x,  node.js 8.11x,  系统window，ES6,  Axios<br>1：vue项目目录文件结构<br><img src="https://img-blog.csdnimg.cn/20181120111157750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FydGh1cndhbmdnYW5n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>备注：在初始化项目后src目录下components只用来存放项目公共组件，不用来存放页面其他组件</p>
<p>2：基于初始化得项目结构，添加开发所需要得必要文件，所有业务代码统一放在src目录下，对于项目层级的划分可以：</p>
<ol>
<li>抽离所有的api接口统一管理，每个模块的api也单独管理</li>
<li>所有单页早src下新建views管理所有页面</li>
<li>项目使用的所有公共方法，以及相关的工具，统一在src下新建utils文件夹管理</li>
<li>项目所需要用到的字体统一在src下新建fonts管理</li>
<li>项目所需要的主题统一在src下新建theme管理</li>
<li>公共css文件在src下新建style管理</li>
</ol>
<p>3：编码命名</p>
<p> 1.驼峰命名法(camelCase): 又称为小驼峰命名法，除第一个单词的首字母小写，其他单词的首字母均大写。<br> 2. 帕斯卡命名法(PascalCase): 又称为大驼峰命名法，所有单词的首字母均大写。常用于类名、命名空间<br> 3. 下划线命名法(Underline): 多个单词之间以下划线连接，大写常用于常量，小写常用于文件命名。<br> 4. 短横线命名法(kebab-case): 多个单词之间以短横线(-)连接，单词全部小写。<br> 5. 匈牙利命名法(Hungarian): 通过在变量名前面加上相应的小写字母的符号标识作为前缀，标识除变量的作用域、类型等。广泛应用于Windows编程中。</p>
<pre><code> 1：命名
       1：变量使用Camel(驼峰)命名法，例如

              var loadingModules = &#123;&#125;

        2：函数使用Camel命名法，例如

              function stringFormat() &#123;&#125;

        3：常量使用全部字母大写，单词间下划线分割，例如

              var HTML_ENTRY = &#123;&#125;

        4：建议boolean类型的变量使用 is 或者 has 开头，例如

              var  isTrue = false;

              var hasMoreInfo = true

        5：项目文件夹的命名一般用小写，例如

              notice

        6：在html中 对于class的命名统一使用短横线命名法，例如

             &lt;div class=&quot;head-wrapper&quot;&gt;&lt;/div&gt;

        7：在组件中，对于组件name的命名(子组件)，统一采取短横线命名法，例如

             export default &#123;

                     name: &#39;fatherName-childrenName&#39;

             &#125;
 
</code></pre>
<p>4：代码规范<br>        1：代码规范（css）（基于scss）</p>
<pre><code>       备注：关于缩进问题，无论是编辑器还是eslint规范（编辑器的格式化会基本达到标准的规范），还是个人习惯，都没有太大影响，保持自己的习惯就行，这里只是大致做一些基本的规范

       1：对于超长的样式，在样式值得空格或者逗号后换行，建议按照逻辑分组，例如

        // 不同属性值按照逻辑分组

        background:

               transparent url(xxxx)

               no-repeat 0 0;

       2：scss得嵌套层级3层为宜，例如

             .wrapper &#123;

                     width: 120px;

                     .header-wrapper &#123;

                             height: 120px;

                             .title &#123;

                                    font-size: 16px;

                       &#125;

                  &#125;

             &#125;

      3：当一个rule包含多个selector时，每个声明得选择器必须独占一行，例如

            .container,

            .wrapper,

            .comment  &#123;

                font-size: 12px

            &#125;

     4：属性选择器中值必须时双引号包围，例如

          article[character=&quot;wanggang&quot;]  &#123;

                   font-size:  12px;

          &#125;

    5：属性值必须领起一行，例如

          .wrapper &#123;

                  margin:  0;

                  padding: 0

          &#125;

    6：属性值必须以分号结尾，例如

          .wrapper &#123;

                 font-size: 10px;

         &#125;

   7：建议对于z-index进行分层，对于文档流外的绝对定位的视觉层进行管理。

   8：当css的属性中 url函数中路劲不加引号，例如

         body &#123;

                // good

                 background: url(path)

               // bad

               background: url(&quot;path&quot;)

         &#125;

   9：关于scss混合，定义全局公用的css方法，通过@include调用，避免重复写css代码片段，例如

        //全局css方法

        @mixin radius ($radius:5px) &#123;

                 border-radius: $radius;

                 height: 12px;

                width: 120px;

         &#125;

        //组件引用

        .wrapper &#123;

                @include: radius(10px);

       &#125;
</code></pre>
<p>2：javascript(vue)基本规范</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs awk">&lt;script&gt;<br>export default &#123;<br>    <span class="hljs-regexp">//</span> 组件名称<br>    name: <span class="hljs-string">&#x27;name&#x27;</span>,<br>    <span class="hljs-regexp">//</span> 引入组件<br>    components: &#123;<br>        xxx<br>    &#125;,<br>    <span class="hljs-regexp">//</span> 接受数据<br>    props: &#123;<br>        xxx<br>    &#125;,<br>    <span class="hljs-regexp">//</span> 过滤器<br>     filter: &#123;<br>        xxx: &#123; xxx &#125;<br>    &#125;,<br>    <span class="hljs-regexp">//</span> 混入<br>    mixins: [ xxx ],<br>    <span class="hljs-regexp">//</span> 组件实例数据<br>    data() &#123;<br>        return &#123;<br>           xxx<br>        &#125;<br>    &#125;,<br>    <span class="hljs-regexp">//</span> 计算属性<br>    computed: &#123;<br>        xxx<br>    &#125;,<br>    <span class="hljs-regexp">//</span> 监听属性变化 执行异步或者是开销比较大的操作<br>    watch: &#123;<br>       xxx<br>    &#125;,<br>    <span class="hljs-regexp">//</span>  渲染函数 jsx<br>    render(h) =&gt; &#123;<br>        xxx<br>    &#125;,<br>    mounted() &#123;<br>        <span class="hljs-regexp">//</span>页面初始化方法<br>    &#125;,<br>    methods: &#123;<br>        <span class="hljs-regexp">//</span>实例方法集合<br>    &#125;<br>&#125;<br><br><br>&lt;/script&gt;<br></code></pre></td></tr></table></figure>

<p>以上并没有列出所有的生命周期，只是针对于现有项目大多数情况下通用的一种情况，原则上，将生命周期函数尽量放下面，而将，mixin，data, computed, fliter，components, props等尽量放在上面，以便能够快速读懂组件。</p>
<p>2：关于组件划分原则(  原则上每个组件只做一件事情，组件(模块)不仅仅是为了复用，个人理解有以下几方面：)</p>
<ol>
<li>组件化是对实现的分层，是更加有效，</li>
<li>组件化是对资源的重组和优化。使得项目资源趋于合理</li>
<li>组件划有利于单元测试</li>
<li>组件划对于重构也是非常的友好</li>
</ol>
<p>   组件的的设计原则一般有以下情况，可根据实际的业务做以调整（不死板），大的方向基本不变化</p>
<ol start="5">
<li>单一职责原则</li>
<li>追求短小精悍</li>
<li>避免太多参数（重要）</li>
<li>避免暴露组件内部实现（重要）</li>
<li>避免直接操作DOM</li>
<li> 入口检查参数的有效性，出口检查返回的正确性（重要**重要）</li>
</ol>
<p>3：公共方法的封装<br>      前面有说到公共方法可以在utils中新建文件夹统一管理，然后再调用的地方调用，还将方法挂载到Vue的实例上，在组件中调用，例如:</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><br><span class="hljs-comment">// 示例代码 ① 在utils中统一管理实例代码</span><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 让时间戳按照指定的日期格式显示的方法</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@author <span class="hljs-variable">wanggang</span></span></span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param  <span class="hljs-type">&#123; String &#125;</span> </span>格式字符串</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return <span class="hljs-type">&#123; String &#125;</span> </span>返回生成的日期时间字符串</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@example</span></span><br><span class="hljs-comment">    * let d       = +new Date();</span><br><span class="hljs-comment">    * let pattern = &quot;YYYY-MM-DD&quot;;</span><br><span class="hljs-comment">    * return formatDate(d, pattern);</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">formatDate</span>(<span class="hljs-params">timestamp,pattern</span>) </span>&#123;<br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * eg:pattern=&quot;YYYY-MM-DD hh:mm:ss&quot;;</span><br><span class="hljs-comment">    * </span><br><span class="hljs-comment">    */</span><br>    <span class="hljs-keyword">var</span> d  = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(timestamp);<br>    <span class="hljs-keyword">var</span> o = &#123;<br>        <span class="hljs-string">&quot;W+&quot;</span> : d.getDay() == <span class="hljs-number">0</span> ? <span class="hljs-number">7</span> : d.getDay(),       <span class="hljs-comment">//week</span><br>        <span class="hljs-string">&quot;M+&quot;</span> : d.getMonth() + <span class="hljs-number">1</span>,                       <span class="hljs-comment">//month</span><br>        <span class="hljs-string">&quot;D+&quot;</span> : d.getDate(),                            <span class="hljs-comment">//day</span><br>        <span class="hljs-string">&quot;d+&quot;</span> : d.getDate(),                            <span class="hljs-comment">//day</span><br>        <span class="hljs-string">&quot;h+&quot;</span> : d.getHours(),                           <span class="hljs-comment">//hour</span><br>        <span class="hljs-string">&quot;m+&quot;</span> : d.getMinutes(),                         <span class="hljs-comment">//minute</span><br>        <span class="hljs-string">&quot;s+&quot;</span> : d.getSeconds(),                         <span class="hljs-comment">//second</span><br>        <span class="hljs-string">&quot;q+&quot;</span> : <span class="hljs-built_in">Math</span>.floor((d.getMonth() + <span class="hljs-number">3</span>) / <span class="hljs-number">3</span>),     <span class="hljs-comment">//quarter</span><br>        <span class="hljs-string">&quot;S&quot;</span>  : d.getMilliseconds(),                    <span class="hljs-comment">//millisecond</span><br>        <span class="hljs-string">&quot;f+&quot;</span> : d.getMilliseconds()<br>    &#125;<br><br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/(Y+)/</span>.test(pattern) || <span class="hljs-regexp">/(y+)/</span>.test(pattern)) &#123;<br>        pattern = pattern.replace(<span class="hljs-built_in">RegExp</span>.$1, (d.getFullYear() + <span class="hljs-string">&quot;&quot;</span>).substr(<span class="hljs-number">4</span> - <span class="hljs-built_in">RegExp</span>.$1.length));<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k <span class="hljs-keyword">in</span> o) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">&quot;(&quot;</span> + k + <span class="hljs-string">&quot;)&quot;</span>).test(pattern)) &#123;<br>            pattern = pattern.replace(<span class="hljs-built_in">RegExp</span>.$1, <span class="hljs-built_in">RegExp</span>.$1.length == <span class="hljs-number">1</span> ? o[k] : (<span class="hljs-string">&quot;00&quot;</span> + o[k]).substr((<span class="hljs-string">&quot;&quot;</span> + o[k]).length));<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> pattern;<br>&#125;<br>备注:对于相对复杂的公共方法，原则上建议 使用标准的多行注释代码块，包括基本的方法名：<span class="hljs-meta">@parmas</span>(参数，类型)，<span class="hljs-meta">@return</span> (返回值，类型)，<span class="hljs-meta">@example</span>（使用案例）,至于创建时间，更新时间，邮箱，作者等可忽略<br><br><br><span class="hljs-comment">// 示例代码 ② 在utils中统一管理实例代码</span><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">    * 生成随机数的方法</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param  <span class="hljs-type">&#123; Number &#125;</span> </span>min 生成随机数的最小值</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@param  <span class="hljs-type">&#123; Number &#125;</span> </span>max 生成随机数的最大值</span><br><span class="hljs-comment">    * <span class="hljs-doctag">@return <span class="hljs-type">&#123; Number &#125;</span> </span>返回生成的随机数</span><br><span class="hljs-comment">    */</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRandom</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min + <span class="hljs-number">1</span>) + min);<br>&#125;<br><br><br>备注： 对于一般性的方法，应具备 <span class="hljs-meta">@params</span> 和 <span class="hljs-meta">@return</span>，并且和值对应的类型<br><br><br><span class="hljs-comment">// 示例代码 ③ 在utils中统一管理实例代码</span><br><br><br><span class="hljs-comment">/*** 返回字节数 ***/</span><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">byteLength</span>(<span class="hljs-params">value</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> value.replace(<span class="hljs-regexp">/[^\x00-\xff]/g</span>, <span class="hljs-string">&quot;**&quot;</span>).length;<br>&#125;<br><br><br>备注： 对于相对简单的方法 可以做一行注释（多上注释的规则）<br><br><br><span class="hljs-comment">// 示例代码 ① 挂载在vue原型上</span><br><br><br>Vue.prototype.getWindowHeight = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>   <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.innerHeight || <span class="hljs-built_in">document</span>.documentElement.height || <span class="hljs-built_in">document</span>.body.clientHeight<br>&#125;<br>组件中以 <span class="hljs-built_in">this</span>.getWindowHeight()调用。不过建议以统一在utils中统一管理，需要使用的时候引入相关的方法。尽量避免过多使用<span class="hljs-built_in">this</span>，和过多在prototype上挂载方法属性等。<br></code></pre></td></tr></table></figure>
<p>4：关于请求（Axios）（http.js）</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 请求库</span><br><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;axios&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; Message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-ui&#x27;</span>;<br><span class="hljs-comment">// 设定超时</span><br>axios.default.timeout = <span class="hljs-number">10000</span>;<br><br><span class="hljs-comment">// post请求头</span><br>axios.defaults.headers.post[<span class="hljs-string">&#x27;Content-Type&#x27;</span>] = <span class="hljs-string">&#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27;</span>;<br><br><span class="hljs-comment">// 请求拦截器 对request</span><br>axios.interceptors.request.use(<span class="hljs-function"><span class="hljs-params">config</span> =&gt;</span> &#123;<br>    <span class="hljs-comment">// 发起请求之前判断  仅仅为示例代码</span><br>    <span class="hljs-comment">// 假设token存在localStorage中</span><br>    <span class="hljs-comment">// 如果token存在，在每次得请求header上带上token</span><br>    <span class="hljs-comment">// token存在，但是token已经过期，在响应拦截器中对返回得状态进行判断</span><br>    <span class="hljs-keyword">const</span> token = <span class="hljs-built_in">window</span>.localStorage.token;<br>    token &amp;&amp; (config.headers.Authorization = token)<br>    <span class="hljs-keyword">return</span> config<br>&#125;, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(err);<br>&#125;);<br><br><br><span class="hljs-comment">// 请求拦截器 对response</span><br>axios.interceptors.response.use(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(response.status === <span class="hljs-number">200</span>)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.resolve(response);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(response);<br>    &#125;<br>&#125;, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(err.response)&#123;<br>        <span class="hljs-keyword">let</span> status = err.response.status;<br>        <span class="hljs-keyword">switch</span>(status) &#123;<br>            <span class="hljs-comment">// 401未登陆</span><br>            <span class="hljs-comment">// 未登陆 则条状到登陆页面，并且携带当前页面得path</span><br>            <span class="hljs-comment">// 登陆成功后 返回当前页面</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">401</span>:<br><br>                 router.replace(&#123;<br>                     <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/login&#x27;</span>,<br>                     <span class="hljs-attr">query</span>: &#123;<br>                         <span class="hljs-attr">redirect</span>: router.currentRouter.fullPath<br>                     &#125;<br>                 &#125;);<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-comment">// 403 token过期</span><br>            <span class="hljs-comment">// 登陆过期 对用户进行提示</span><br>            <span class="hljs-comment">// 登陆成功返回当前页面</span><br>            <span class="hljs-comment">// 跳转登陆页</span><br>            <span class="hljs-keyword">case</span> <span class="hljs-number">403</span>:<br>                 Message(&#123;<br>                     <span class="hljs-attr">message</span> : <span class="hljs-string">&#x27;登陆过期，请重新登陆&#x27;</span>，<br>                     <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>                 &#125;)<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-number">404</span>:<br>                Message(&#123;<br>                    <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;网络请求不存在&#x27;</span>,<br>                    <span class="hljs-attr">duration</span>: <span class="hljs-number">2000</span><br>                &#125;)<br>            <span class="hljs-keyword">break</span>;<br>            <span class="hljs-comment">//  其他错误统一抛出，如果要对其中得返回码进行其他操作，在视情况在加case 进行操作</span><br>            <span class="hljs-keyword">default</span>:<br>                Message(&#123;<br>                    <span class="hljs-attr">message</span>   : error.response.message,<br>                    <span class="hljs-attr">durantion</span> : <span class="hljs-number">2000</span><br>                &#125;)<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Promise</span>.reject(err);<br>&#125;)<br><br><br><span class="hljs-comment">//  请求封装</span><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * GET 封装</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return <span class="hljs-type">&#123; Promise &#125;</span></span></span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get</span>(<span class="hljs-params">url, params = &#123;&#125;</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        axios.get(url, &#123;<br>            <span class="hljs-attr">params</span>: params<br>        &#125;)<br>            .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                resolve(res.data)<br>            &#125;)<br>            .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                reject(err)<br>            &#125;)<br>    &#125;)<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* POST 封装</span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@return <span class="hljs-type">&#123; Promise &#125;</span></span></span><br><span class="hljs-comment">* </span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">post</span>(<span class="hljs-params">url, params = &#123;&#125;</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        axios.post(url, params)<br>            .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                resolve(res.data)<br>            &#125;)<br>            .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                reject(err)<br>            &#125;)<br>    &#125;)<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* PATCH 封装</span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@returns <span class="hljs-type">&#123; Promise &#125;</span></span></span><br><span class="hljs-comment">* </span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">patch</span>(<span class="hljs-params">url, params = &#123;&#125;</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        axios.patch(url, params)<br>            .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                resolve(res.data)<br>            &#125;)<br>            .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                reject(err)<br>            &#125;)<br>    &#125;)<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* put 封装</span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@returns <span class="hljs-type">&#123; Promise &#125;</span></span></span><br><span class="hljs-comment">* </span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">put</span>(<span class="hljs-params">url, params = &#123;&#125;</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        axios.put(url, params)<br>            .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                resolve(res.data)<br>            &#125;)<br>            .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                reject(err)<br>            &#125;)<br>    &#125;)<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* deltet 封装</span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">url</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@param <span class="hljs-variable">data</span></span></span><br><span class="hljs-comment">* <span class="hljs-doctag">@returns <span class="hljs-type">&#123; Promise &#125;</span></span></span><br><span class="hljs-comment">* </span><br><span class="hljs-comment">*/</span><br><br><br><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">deleteItem</span>(<span class="hljs-params">url, params = &#123;&#125;</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>        axios.delete(url, params)<br>            .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>                resolve(res.data)<br>            &#125;)<br>            .catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>                reject(err)<br>            &#125;)<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>

<p>接口管理（示例）</p>
<p>在src目录下新建文件夹api</p>
<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-comment">//  文件夹</span><br>src<br>  -api<br>   -setting<br>   -xxx<br>   -xxx<br><span class="hljs-comment">//  在api下对每个模块新建文件夹统一管理</span><br><span class="hljs-comment">//  以setting模块为例,如下：</span><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *  setting 模块接口</span><br><span class="hljs-comment"> */</span><br><br><br><span class="hljs-comment">// 引入对应的方法</span><br>import &#123; <span class="hljs-keyword">get</span>, post, put, deleteItem, patch  &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../../utils/http&#x27;</span><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 接口配置列表 interfaceList </span><br><span class="hljs-comment"> */</span><br>export <span class="hljs-keyword">const</span> interfaceList = (<span class="hljs-keyword">params</span>) =&gt; <span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;/setting/api&#x27;</span>, <span class="hljs-keyword">params</span>)<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 获取属性列表 getAttributes</span><br><span class="hljs-comment"> */</span><br>export <span class="hljs-keyword">const</span> getAttributes = (<span class="hljs-keyword">params</span>) =&gt; <span class="hljs-keyword">get</span>(<span class="hljs-string">&#x27;/pdm/attribute&#x27;</span>, <span class="hljs-keyword">params</span>)<br><br><br>......<br></code></pre></td></tr></table></figure>

<p>在组件中调用如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs xml">	<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-comment">//  代码仅作为例子</span></span><br><span class="javascript"><span class="hljs-keyword">import</span> &#123; getAttributes &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;api/setting/index.js&#x27;</span></span><br><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span>  &#123;</span><br><span class="javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">            <span class="hljs-attr">dataAttr</span>  : [],</span><br><span class="javascript">            <span class="hljs-attr">arr</span>       : [<span class="hljs-string">&#x27;category_attributes&#x27;</span>,<span class="hljs-string">&#x27;attribute_values&#x27;</span>],</span><br><span class="javascript">            <span class="hljs-attr">defaultPropsAttr</span> : &#123;</span><br><span class="javascript">                <span class="hljs-attr">children</span> : <span class="hljs-string">&quot;children&quot;</span>,</span><br><span class="javascript">                <span class="hljs-attr">label</span> : <span class="hljs-string">&quot;value&quot;</span></span><br><span class="javascript">            &#125;,</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">mounted</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">        <span class="hljs-keyword">let</span> params = &#123;</span><br><span class="javascript">             <span class="hljs-attr">id</span>   : <span class="hljs-number">1</span>,</span><br><span class="javascript">             <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;小蓝瓶&#x27;</span></span><br><span class="javascript">        &#125;</span><br><span class="javascript">        getAttributes(params).then( <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span>(res.success)&#123;</span><br><span class="javascript">                <span class="hljs-built_in">this</span>.dataAttr = res.data.map(<span class="hljs-built_in">this</span>.deepMap)</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;).then(<span class="hljs-function">() =&gt;</span> &#123;&#125;).then(<span class="hljs-function">() =&gt;</span> &#123;&#125;)</span><br><span class="javascript">    &#125;,</span><br><span class="javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-title">deepMap</span>(<span class="hljs-params">v, index</span>)</span> &#123;</span><br><span class="javascript">         <span class="hljs-keyword">let</span> keys = <span class="hljs-built_in">this</span>.arr.find(<span class="hljs-function"><span class="hljs-params">key</span> =&gt;</span> v[key]);</span><br><span class="javascript">         <span class="hljs-keyword">let</span> val = v[keys]</span><br><span class="javascript">         <span class="hljs-keyword">if</span>(!val)</span><br><span class="javascript">           <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">               ...v,</span><br><span class="javascript">               <span class="hljs-attr">value</span>:v.valus</span><br><span class="javascript">           &#125;</span><br><span class="javascript">           <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">               ...v,</span><br><span class="javascript">               <span class="hljs-attr">value</span>: v.name</span><br><span class="javascript">               <span class="hljs-attr">children</span>: val.map(<span class="hljs-built_in">this</span>.deepMap)</span><br><span class="javascript">           &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript">    &#125;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><br>备注：1：以上代码仅仅为示例代码<br>      2：在模块中引入对应的方法，方法接受参数（对象），将对象传入，then回调中获取结果，<br>      3：如果再then回调中有比较多的业务代码，原则上，写在独立的方法中，如上述案例，<br>      4：如果有多层then回调，原则上应该将then中的逻辑都写在独立的方法中<br></code></pre></td></tr></table></figure>






</div><div class="article-licensing box"><div class="licensing-title"><p>关于VUE项目基本结构</p><p><a href="https://until-you-possible.github.io/blog/2021">https://until-you-possible.github.io/blog/2021</a></p></div><div class="licensing-meta level is-mobile"><div class="level-left"><div class="level-item is-narrow"><div><h6>Author</h6><p>arthur</p></div></div><div class="level-item is-narrow"><div><h6>Posted on</h6><p>2021-07-12</p></div></div><div class="level-item is-narrow"><div><h6>Updated on</h6><p>2021-07-24</p></div></div><div class="level-item is-narrow"><div><h6>Licensed under</h6><p><a class="icons" rel="noopener" target="_blank" title="Creative Commons" href="https://creativecommons.org/"><i class="icon fab fa-creative-commons"></i></a><a class="icons" rel="noopener" target="_blank" title="Attribution" href="https://creativecommons.org/licenses/by/4.0/"><i class="icon fab fa-creative-commons-by"></i></a><a class="icons" rel="noopener" target="_blank" title="Noncommercial" href="https://creativecommons.org/licenses/by-nc/4.0/"><i class="icon fab fa-creative-commons-nc"></i></a></p></div></div></div></div></div><div class="notification is-danger">You need to set <code>install_url</code> to use ShareThis. Please set it in <code>_config.yml</code>.</div></article></div><div class="card"><div class="card-content"><h3 class="menu-label has-text-centered">Like this article? Support the author with</h3><div class="buttons is-centered"><a class="button donate" href="/blog/" target="_blank" rel="noopener" data-type="afdian"><span class="icon is-small"><i class="fas fa-charging-station"></i></span><span>Afdian.net</span></a><a class="button donate" data-type="alipay"><span class="icon is-small"><i class="fab fa-alipay"></i></span><span>Alipay</span><span class="qrcode"><img src="/blog/" alt="Alipay"></span></a><a class="button donate" href="/blog/" target="_blank" rel="noopener" data-type="buymeacoffee"><span class="icon is-small"><i class="fas fa-coffee"></i></span><span>Buy me a coffee</span></a><a class="button donate" href="/blog/" target="_blank" rel="noopener" data-type="patreon"><span class="icon is-small"><i class="fab fa-patreon"></i></span><span>Patreon</span></a><div class="notification is-danger">You forgot to set the <code>business</code> or <code>currency_code</code> for Paypal. Please set it in <code>_config.yml</code>.</div><a class="button donate" data-type="wechat"><span class="icon is-small"><i class="fab fa-weixin"></i></span><span>Wechat</span><span class="qrcode"><img src="/blog/" alt="Wechat"></span></a></div></div></div><nav class="post-navigation mt-4 level is-mobile"><div class="level-start"><a class="article-nav-prev level level-item link-muted" href="/blog/2021"><i class="level-item fas fa-chevron-left"></i><span class="level-item">关于XHR对象一些理解</span></a></div></nav><div class="card"><div class="card-content"><h3 class="title is-5">Comments</h3><div class="notification is-danger">You forgot to set the <code>shortname</code> for Disqus. Please set it in <code>_config.yml</code>.</div></div></div></div><div class="column column-left is-4-tablet is-4-desktop is-4-widescreen  order-1 is-sticky"><div class="card widget" data-type="profile"><div class="card-content"><nav class="level"><div class="level-item has-text-centered flex-shrink-1"><div><figure class="image is-128x128 mx-auto mb-2"><img class="avatar is-rounded" src="/blog/img/rc.png" alt="until-you-possible"></figure><p class="title is-size-4 is-block" style="line-height:inherit;">until-you-possible</p><p class="is-size-6 is-block">web developer &amp;&amp; java developer</p><p class="is-size-6 is-flex justify-content-center"><i class="fas fa-map-marker-alt mr-1"></i><span>shanghai-china</span></p></div></div></nav><nav class="level is-mobile"><div class="level-item has-text-centered is-marginless"><div><p class="heading">Posts</p><a href="/blog/archives"><p class="title">2</p></a></div></div><div class="level-item has-text-centered is-marginless"><div><p class="heading">Categories</p><a href="/blog/categories"><p class="title">0</p></a></div></div><div class="level-item has-text-centered is-marginless"><div><p class="heading">Tags</p><a href="/blog/tags"><p class="title">0</p></a></div></div></nav><div class="level"><a class="level-item button is-primary is-rounded" href="https://github.com/Until-You-Possible" target="_blank" rel="noopener">Follow</a></div><div class="level is-mobile is-multiline"><a class="level-item button is-transparent is-marginless" target="_blank" rel="noopener" title="Github" href="https://github.com/Until-You-Possible"><i class="fab fa-github"></i></a><a class="level-item button is-transparent is-marginless" target="_blank" rel="noopener" title="Facebook" href="https://github.com/Until-You-Possible"><i class="fab fa-facebook"></i></a><a class="level-item button is-transparent is-marginless" target="_blank" rel="noopener" title="Twitter" href="https://github.com/Until-You-Possible"><i class="fab fa-twitter"></i></a><a class="level-item button is-transparent is-marginless" target="_blank" rel="noopener" title="Dribbble" href="https://github.com/Until-You-Possible"><i class="fab fa-dribbble"></i></a><a class="level-item button is-transparent is-marginless" target="_blank" rel="noopener" title="RSS" href="/blog/"><i class="fas fa-rss"></i></a></div></div></div><!--!--><div class="card widget" data-type="links"><div class="card-content"><div class="menu"><h3 class="menu-label">Links</h3><ul class="menu-list"><li><a class="level is-mobile" href="https://blog.csdn.net/arthurwanggang" target="_blank" rel="noopener"><span class="level-left"><span class="level-item">CSDN</span></span><span class="level-right"><span class="level-item tag">blog.csdn.net</span></span></a></li></ul></div></div></div><!--!--><div class="card widget" data-type="recent-posts"><div class="card-content"><h3 class="menu-label">Recents</h3><article class="media"><figure class="media-left"><a class="image" href="/blog/2021"><img src="/blog/img/xhr.jpeg" alt="关于XHR对象一些理解"></a></figure><div class="media-content"><p class="date"><time dateTime="2021-07-22T16:02:12.804Z">2021-07-23</time></p><p class="title"><a href="/blog/2021">关于XHR对象一些理解</a></p></div></article><article class="media"><figure class="media-left"><a class="image" href="/blog/2021"><img src="/blog/img/rc.png" alt="关于VUE项目基本结构"></a></figure><div class="media-content"><p class="date"><time dateTime="2021-07-12T15:53:07.922Z">2021-07-12</time></p><p class="title"><a href="/blog/2021">关于VUE项目基本结构</a></p></div></article></div></div><div class="card widget" data-type="archives"><div class="card-content"><div class="menu"><h3 class="menu-label">Archives</h3><ul class="menu-list"><li><a class="level is-mobile" href="/blog/archives/2021/07/"><span class="level-start"><span class="level-item">July 2021</span></span><span class="level-end"><span class="level-item tag">2</span></span></a></li></ul></div></div></div><!--!--><div class="card widget" data-type="subscribe-email"><div class="card-content"><div class="menu"><h3 class="menu-label">Subscribe for updates</h3><form action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(&#039;https://feedburner.google.com/fb/a/mailverify?uri=&#039;,&#039;popupwindow&#039;,&#039;scrollbars=yes,width=550,height=520&#039;);return true"><input type="hidden" value="" name="uri"><input type="hidden" name="loc" value="en_US"><div class="field has-addons"><div class="control has-icons-left is-expanded"><input class="input" name="email" type="email" placeholder="Email"><span class="icon is-small is-left"><i class="fas fa-envelope"></i></span></div><div class="control"><input class="button" type="submit" value="Subscribe"></div></div></form></div></div></div><div class="card widget"><div class="card-content"><div class="notification is-danger">You need to set <code>client_id</code> and <code>slot_id</code> to show this AD unit. Please set it in <code>_config.yml</code>.</div></div></div></div><!--!--></div></div></section><footer class="footer"><div class="container"><div class="level"><div class="level-start"><a class="footer-logo is-block mb-2" href="/blog/"><img src="/blog/img/logo.svg" alt="until-you-possible" height="28"></a><p class="is-size-7"><span>&copy; 2021 arthur</span>  Powered by <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> &amp; <a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="noopener">Icarus</a><br><span id="busuanzi_container_site_uv">Visited by <span id="busuanzi_value_site_uv">0</span> users</span></p></div><div class="level-end"><div class="field has-addons"><p class="control"><a class="button is-transparent is-large" target="_blank" rel="noopener" title="Creative Commons" href="https://creativecommons.org/"><i class="fab fa-creative-commons"></i></a></p><p class="control"><a class="button is-transparent is-large" target="_blank" rel="noopener" title="Attribution 4.0 International" href="https://creativecommons.org/licenses/by/4.0/"><i class="fab fa-creative-commons-by"></i></a></p><p class="control"><a class="button is-transparent is-large" target="_blank" rel="noopener" title="Download on GitHub" href="https://github.com/ppoffice/hexo-theme-icarus"><i class="fab fa-github"></i></a></p></div></div></div></div></footer><script src="https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js"></script><script src="https://cdn.jsdelivr.net/npm/moment@2.22.2/min/moment-with-locales.min.js"></script><script src="https://cdn.jsdelivr.net/npm/clipboard@2.0.4/dist/clipboard.min.js" defer></script><script>moment.locale("en");</script><script>var IcarusThemeSettings = {
            article: {
                highlight: {
                    clipboard: true,
                    fold: 'folded'
                }
            }
        };</script><script src="/blog/js/column.js"></script><script src="/blog/js/animation.js"></script><a id="back-to-top" title="Back to top" href="javascript:;"><i class="fas fa-chevron-up"></i></a><script src="/blog/js/back_to_top.js" defer></script><!--!--><!--!--><!--!--><!--!--><script src="https://cdn.jsdelivr.net/npm/cookieconsent@3.1.1/build/cookieconsent.min.js" defer></script><script>window.addEventListener("load", () => {
      window.cookieconsent.initialise({
        type: "info",
        theme: "edgeless",
        static: false,
        position: "bottom-left",
        content: {
          message: "This website uses cookies to improve your experience.",
          dismiss: "Got it!",
          allow: "Allow cookies",
          deny: "Decline",
          link: "Learn more",
          policy: "Cookie Policy",
          href: "https://www.cookiesandyou.com/",
        },
        palette: {
          popup: {
            background: "#edeff5",
            text: "#838391"
          },
          button: {
            background: "#4b81e8"
          },
        },
      });
    });</script><script src="https://cdn.jsdelivr.net/npm/lightgallery@1.6.8/dist/js/lightgallery.min.js" defer></script><script src="https://cdn.jsdelivr.net/npm/justifiedGallery@3.7.0/dist/js/jquery.justifiedGallery.min.js" defer></script><script>window.addEventListener("load", () => {
            if (typeof $.fn.lightGallery === 'function') {
                $('.article').lightGallery({ selector: '.gallery-item' });
            }
            if (typeof $.fn.justifiedGallery === 'function') {
                if ($('.justified-gallery > p > .gallery-item').length) {
                    $('.justified-gallery > p > .gallery-item').unwrap();
                }
                $('.justified-gallery').justifiedGallery();
            }
        });</script><!--!--><!--!--><script type="text/x-mathjax-config">MathJax.Hub.Config({
            'HTML-CSS': {
                matchFontHeight: false
            },
            SVG: {
                matchFontHeight: false
            },
            CommonHTML: {
                matchFontHeight: false
            },
            tex2jax: {
                inlineMath: [
                    ['$','$'],
                    ['\\(','\\)']
                ]
            }
        });</script><script src="https://cdn.jsdelivr.net/npm/mathjax@2.7.5/unpacked/MathJax.js?config=TeX-MML-AM_CHTML" defer></script><!--!--><!--!--><!--!--><script src="/blog/js/main.js" defer></script><div class="searchbox"><div class="searchbox-container"><div class="searchbox-header"><div class="searchbox-input-container"><input class="searchbox-input" type="text" placeholder="Type something..."></div><a class="searchbox-close" href="javascript:;">×</a></div><div class="searchbox-body"></div></div></div><script src="/blog/js/insight.js" defer></script><script>document.addEventListener('DOMContentLoaded', function () {
            loadInsight({"contentUrl":"/blog/content.json"}, {"hint":"Type something...","untitled":"(Untitled)","posts":"Posts","pages":"Pages","categories":"Categories","tags":"Tags"});
        });</script></body></html>